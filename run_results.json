{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2025-02-07T09:37:09.993708Z", "invocation_id": "1f94bcca-5b9d-4eea-8a95-3d313d60a6d6", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-07T09:37:09.904706Z", "completed_at": "2025-02-07T09:37:09.923709Z"}, {"name": "execute", "started_at": "2025-02-07T09:37:09.925706Z", "completed_at": "2025-02-07T09:37:09.925706Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03600144386291504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.AdventureWorks2022.sales_by_year", "compiled": true, "compiled_code": "/*Create a dbt model query to calculate sales by year for trend analysis. The query should perform the following steps:\n\nExtract the year from the sales date.\nAggregate the total sales amount for each year.\nInput Details:\n\nSales data is available in a table sales_data with the following relevant columns:\nsale_date: The date of each sale.\nsale_amount: The amount of each sale.\nOutput Requirements: The query should return the following columns:\n\nyear: The year extracted from the sale_date column.\ntotal_sales: The total sales amount aggregated for each year.\n*/\n\n\n\n\n    SELECT \n        YEAR(OrderDate) AS Year,\n        ROUND(SUM(TotalDue), 2) AS Total_Sales,\n        COUNT(SalesOrderID) AS Sales_Order_ID_Count\n    FROM \"AdventureWorks2022\".\"Sales\".\"SalesOrderHeader\"\n   \n    GROUP BY YEAR(OrderDate)", "relation_name": "\"AdventureWorks2022\".\"dbo\".\"sales_by_year\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-07T09:37:09.894703Z", "completed_at": "2025-02-07T09:37:09.924709Z"}, {"name": "execute", "started_at": "2025-02-07T09:37:09.927706Z", "completed_at": "2025-02-07T09:37:09.927706Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0390019416809082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.AdventureWorks2022.stg_inventory", "compiled": true, "compiled_code": "--stg_inventory.sql\n--Two columns not present in the actual table\n\n\n;\n\nWith stg_inventory as ()\nSELECT\n    ProductID AS product_id,\n    LocationID AS warehouse_id,\n    Quantity AS stock_quantity,\n    SafetyStockLevel AS safety_stock_level,\n    ReorderPoint AS reorder_point,\n    ModifiedDate AS modified_date\nFROM\n    AdventureWorks2022.Production.ProductInventory)\n\n    Select * from stg_inventory;", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-07T09:37:09.911705Z", "completed_at": "2025-02-07T09:37:09.928707Z"}, {"name": "execute", "started_at": "2025-02-07T09:37:09.930707Z", "completed_at": "2025-02-07T09:37:09.930707Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04000282287597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.AdventureWorks2022.stg_customers", "compiled": true, "compiled_code": "--Who are the top 10 customers by total lifetime sales revenue?\n--This is the staging model.\n\n\n\nwith stg_customers as (\nSELECT\n    CustomerID AS customer_id,\n    PersonID AS person_id,\n    TerritoryID AS territory_id,\n    AccountNumber AS account_number,\n    ModifiedDate AS modified_date\nFROM\n    \"AdventureWorks2022\".\"Sales\".\"customer\"\n)\n\n\tSelect * from stg_customers;", "relation_name": "\"AdventureWorks2022\".\"dbo\".\"stg_customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-07T09:37:09.916706Z", "completed_at": "2025-02-07T09:37:09.928707Z"}, {"name": "execute", "started_at": "2025-02-07T09:37:09.932713Z", "completed_at": "2025-02-07T09:37:09.932713Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04200887680053711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.AdventureWorks2022.stg_products", "compiled": true, "compiled_code": "--stg_products\n--Creating this stging_model\n\n\n\nwith stg_products as (\n    SELECT\n    ProductID AS product_id,\n    [Name] AS product_name,\n    ProductNumber AS product_number,\n    ListPrice AS list_price,\n    ModifiedDate AS modified_date\nFROM\n        \"AdventureWorks2022\".\"Production\".\"Product\"\nWHERE\n    ListPrice > 0)\n\n    Select * from stg_products;", "relation_name": "\"AdventureWorks2022\".\"dbo\".\"stg_products\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-07T09:37:09.942708Z", "completed_at": "2025-02-07T09:37:09.960704Z"}, {"name": "execute", "started_at": "2025-02-07T09:37:09.963708Z", "completed_at": "2025-02-07T09:37:09.963708Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02900099754333496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.AdventureWorks2022.stg_sales", "compiled": true, "compiled_code": "--stg_sales.sql\n\n\n\nwith stg_sales as (\n    SELECT \n    SalesOrderID AS sales_order_id,\n    CustomerID AS customer_id,\n    OrderDate AS order_date,\n    TerritoryID AS territory_id,\n    TotalDue AS total_due,\n    SalesPersonID AS sales_person_id,\n    ModifiedDate AS modified_date\nFROM\n    \"AdventureWorks2022\".\"Sales\".\"SalesOrderHeader\"\n)\n   \nSelect * from  stg_sales;", "relation_name": "\"AdventureWorks2022\".\"dbo\".\"stg_sales\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-07T09:37:09.950707Z", "completed_at": "2025-02-07T09:37:09.962707Z"}, {"name": "execute", "started_at": "2025-02-07T09:37:09.965708Z", "completed_at": "2025-02-07T09:37:09.965708Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02499985694885254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.AdventureWorks2022.product_performance", "compiled": true, "compiled_code": "/*product_performance\nPurpose: Identify top-performing products based on profitability.\n\nSteps:\n\nJoin product, sales, and inventory data.\nCalculate profit by subtracting cost from sales.\n\n\nOutput Requirements: The query should return the following columns:\n\nproduct_id: The unique identifier for each product.\nproduct_name: The name of the product.\ntotal_sales: The sum of sales amounts for the product.\ntotal_cost: The sum of costs for the product.\nprofit: Calculated as total_sales - total_cost for the product\n*/\n\n\n\nSELECT\n    p.product_id,\n    p.product_name,\n    SUM(sod.LineTotal) AS total_sales,\n    SUM(sod.LineTotal - p.StandardCost * sod.OrderQty) AS profit,\n    COUNT(DISTINCT soh.SalesOrderID) AS total_orders\nFROM\n    \"AdventureWorks2022\".\"dbo\".\"stg_products\" p\nLEFT JOIN\n    raw.Sales.SalesOrderDetail sod\nON\n    p.product_id = sod.ProductID\nLEFT JOIN\n    raw.Sales.SalesOrderHeader soh\nON\n    sod.SalesOrderID = soh.SalesOrderID\nGROUP BY\n    p.product_id, p.product_name\nORDER BY\n    profit DESC", "relation_name": "\"AdventureWorks2022\".\"dbo\".\"product_performance\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-07T09:37:09.955708Z", "completed_at": "2025-02-07T09:37:09.964709Z"}, {"name": "execute", "started_at": "2025-02-07T09:37:09.967708Z", "completed_at": "2025-02-07T09:37:09.967708Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02599477767944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.AdventureWorks2022.product_sales", "compiled": true, "compiled_code": "/*Question:\n\nWrite a dbt model query to compute the following metrics for each product in a dataset:\n\nTotal Sales: The sum of the LineTotal column from the SalesOrderDetail table for each product.\nTotal Orders: The count of distinct SalesOrderID from the SalesOrderHeader table for each product.\nData Details:\n\nProducts are stored in a table stg_products with columns product_id and product_name.\nSales details are available in the SalesOrderDetail table, linked to stg_products using the ProductID column.\nSales order headers are stored in the SalesOrderHeader table, linked to SalesOrderDetail using the SalesOrderID column.*/\n\n\n\n/*--Incorrect code as self joined the same table, didn't use raw or source\n\tselect \n\ts.ProductID, \n\tp.Name,\n\tRound(sum(s.LineTotal),2) as TotalSales,\n\tSum(s.SalesOrderID) as Total_Sales_Order_Count\n\tfrom \"AdventureWorks2022\".\"dbo\".\"stg_products\" s\n\tLeft join \"AdventureWorks2022\".\"dbo\".\"stg_products\" p\n\ton p. ProductID = s.ProductID\n\tGroup by s.ProductID, p.Name */\n\n  \n  SELECT\n    p.product_id,\n    p.product_name,\n    SUM(sod.LineTotal) AS total_sales,\n    COUNT(DISTINCT soh.SalesOrderID) AS total_orders\nFROM\n    \"AdventureWorks2022\".\"dbo\".\"stg_products\" p\nLEFT JOIN\n    \"AdventureWorks2022\".\"Sales\".\"SalesOrderDetail\" sod\nON\n    p.product_id = sod.ProductID\nLEFT JOIN\n    \"AdventureWorks2022\".\"Sales\".\"SalesOrderHeader\" soh\nON\n    sod.SalesOrderID = soh.SalesOrderID\nGROUP BY\n    p.product_id, p.product_name", "relation_name": "\"AdventureWorks2022\".\"dbo\".\"product_sales\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-07T09:37:09.971716Z", "completed_at": "2025-02-07T09:37:09.977708Z"}, {"name": "execute", "started_at": "2025-02-07T09:37:09.977708Z", "completed_at": "2025-02-07T09:37:09.977708Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009001493453979492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.AdventureWorks2022.customer_orders", "compiled": true, "compiled_code": "--Purpose\n-- Purpose: Join customer and sales data to analyze orders by customers.\n-- Created this model by using stg_customers and stg_sales to get for the \n--analyses orders by customers.\n\n\n\nwith customer_orders as  (\nSelect   \nc.Customer_id\t as\tCustomer_Id,\nc.Account_number as Account_Number,\ns.territory_id\t as\tTerritory_Id,\ns.sales_order_id as Sales_Order_Id,\ns.order_date\t as\t\tOrder_Date,\ns.total_due\t\t as\t\tTotal_Due\nfrom \"AdventureWorks2022\".\"dbo\".\"stg_customers\" as c\nleft join \"AdventureWorks2022\".\"dbo\".\"stg_sales\"  s \non s.customer_id = c.customer_id\n)\n\nselect * from customer_orders;", "relation_name": "\"AdventureWorks2022\".\"dbo\".\"customer_orders\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-07T09:37:09.981706Z", "completed_at": "2025-02-07T09:37:09.987708Z"}, {"name": "execute", "started_at": "2025-02-07T09:37:09.987708Z", "completed_at": "2025-02-07T09:37:09.987708Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00800013542175293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.AdventureWorks2022.customer_lifeTime_Value", "compiled": true, "compiled_code": "/*customer_lifetime_value\nPurpose: Calculate the lifetime value of each customer. -- Aggregate total sales per customer\n\nSteps:\n\nAggregate total sales per customer.\nCount the number of orders per customer.\n\n\nOutput Requirements: The query should return the following columns:\n\ncustomer_id: The unique identifier for each customer.\naccount_number: The account number of each customer.\nlifetime_value: The total sales amount (total_due) aggregated for the customer.\ntotal_orders: The total count of sales orders placed by the customer.\n*/\n\n\nselect \no.Customer_Id as CustomerID,\no.Account_Number as AccountNumber,\nsum(o.Total_Due) as Lifetime_Value,\nCount(o.Sales_Order_Id) as Total_Orders\n\nfrom \"AdventureWorks2022\".\"dbo\".\"customer_orders\" o\nLEFT JOIN \"AdventureWorks2022\".\"dbo\".\"stg_customers\" c on c.customer_id = o.Customer_Id\nGroup by o.Customer_Id, o.Account_Number", "relation_name": "\"AdventureWorks2022\".\"dbo\".\"customer_lifeTime_Value\""}], "elapsed_time": 0.27498912811279297, "args": {"source_freshness_run_project_hooks": false, "show_resource_report": false, "defer": false, "printer_width": 80, "log_path": "C:\\Users\\Mypc\\Desktop\\DBT_2025_Projects\\AdventureWorks2022\\DBT_AdventureWorks2022\\logs", "strict_mode": false, "invocation_command": "dbt docs generate", "populate_cache": true, "profiles_dir": "C:\\Users\\Mypc\\Desktop\\DBT_2025_Projects\\AdventureWorks2022\\DBT_AdventureWorks2022", "log_format": "default", "log_file_max_bytes": 10485760, "favor_state": false, "require_explicit_package_overrides_for_builtin_materializations": true, "vars": {}, "use_colors": true, "print": true, "use_colors_file": true, "version_check": true, "write_json": true, "cache_selected_only": false, "compile": true, "log_format_file": "debug", "project_dir": "C:\\Users\\Mypc\\Desktop\\DBT_2025_Projects\\AdventureWorks2022\\DBT_AdventureWorks2022", "macro_debugging": false, "empty_catalog": false, "warn_error_options": {"include": [], "exclude": []}, "partial_parse_file_diff": true, "log_level_file": "debug", "indirect_selection": "eager", "enable_legacy_logger": false, "introspect": true, "log_level": "info", "send_anonymous_usage_stats": true, "which": "generate", "require_resource_names_without_spaces": false, "exclude": [], "select": [], "quiet": false, "partial_parse": true, "static": false, "static_parser": true}}